language: python
dist: bionic

python:
 - "3.8"

cache:
  pip: true

jobs:
  include:
  - stage: tests
    env: HAZARDLIB
    script:
        - if echo "$TRAVIS_COMMIT_MESSAGE" | grep -vq '\[skip hazardlib\]' || test "$BRANCH" == "master"; then
          pytest --doctest-modules -xv openquake/baselib &&
          OQ_DISTRIBUTE=no pytest --doctest-modules -xv -nauto openquake/hazardlib openquake/hmtk openquake/sep && pytest -vsx doc/adv-manual/developing.rst;
          fi
    after_success:
        - pip install sphinx==1.6.5
        - sudo apt update; sudo apt-get install -y texlive-fonts-recommended texlive-latex-extra latexmk
        - cd doc/sphinx && make html && cd ../adv-manual && make html && make latexpdf
        - if [[ "$BRANCH" == "master" ]]; then
            openssl aes-256-cbc -K $encrypted_806ab0daf95c_key -iv $encrypted_806ab0daf95c_iv -in $TRAVIS_BUILD_DIR/.deploy_rsa.enc -out $TRAVIS_BUILD_DIR/.deploy_rsa -d &&
            chmod 600 $TRAVIS_BUILD_DIR/.deploy_rsa &&
            eval $(ssh-agent -s) && ssh-add $TRAVIS_BUILD_DIR/.deploy_rsa &&
            rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax --delete ../sphinx/build/html/ docs@ci.openquake.org:/var/www/docs.openquake.org/oq-engine/master/ &&
            rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax --delete build/html/ build/latex/OpenQuakeforAdvancedUsers.pdf docs@ci.openquake.org:/var/www/docs.openquake.org/oq-engine/advanced/;
          fi
  - stage: tests
    env: ENGINE
    before_script:
        - oq dbserver start -l DEBUG
    script:
        - pytest --doctest-modules -xv openquake/engine
        - pytest --doctest-modules -xv openquake/server
        - pytest --doctest-modules -xv openquake/calculators
        - pytest --doctest-modules -xv openquake/risklib
        - pytest --doctest-modules -xv openquake/commonlib
        - pytest --doctest-modules -xv openquake/commands
        - oq webui migrate
    after_script:
        - oq reset -y
  - stage: tests
    env: DEMOS
    script:
        # Upload oqdata.zip to http://artifacts.openquake.org/travis/ only if the
        # commit message includes a [demos] tag at the end or branch is master
        - if echo "$TRAVIS_COMMIT_MESSAGE" | grep -q '\[demos\]' || test "$BRANCH" == "master"; then
            zip -q -r /tmp/demos.zip demos/ &&
            OQ_DISTRIBUTE=zmq bin/run-demos.sh $TRAVIS_BUILD_DIR/demos &&
            oq dump /tmp/oqdata.zip &&
            oq restore /tmp/oqdata.zip /tmp/oqdata &&
            helpers/zipdemos.sh $(pwd)/demos &&
            openssl aes-256-cbc -K $encrypted_806ab0daf95c_key -iv $encrypted_806ab0daf95c_iv -in $TRAVIS_BUILD_DIR/.deploy_rsa.enc -out $TRAVIS_BUILD_DIR/.deploy_rsa -d &&
            chmod 600 $TRAVIS_BUILD_DIR/.deploy_rsa &&
            eval $(ssh-agent -s) && ssh-add $TRAVIS_BUILD_DIR/.deploy_rsa &&
            scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /tmp/demos.zip travis@ci.openquake.org:/var/www/artifacts.openquake.org/travis/demos-${BRANCH}.zip &&
            scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /tmp/oqdata.zip travis@ci.openquake.org:/var/www/artifacts.openquake.org/travis/oqdata-${BRANCH}.zip;
          fi
    after_script:
        - oq dbserver stop

before_install:
  - if [ "$TRAVIS_PULL_REQUEST_BRANCH" != "" ]; then BRANCH=$TRAVIS_PULL_REQUEST_BRANCH; else BRANCH=$TRAVIS_BRANCH; fi
  - pip install -U pip

install:
  # Use '[skip wheels]' to get dependencies from upstream pypi without using cached wheels;
  # this is needed to test that (max) requirements in setup.py are still valid.
  - if echo "$TRAVIS_COMMIT_MESSAGE" | grep -vq '\[skip wheels\]'; then
      pip install -r requirements-py38-linux64.txt;
    fi
  - pip install pytest-xdist fiona pillow
  - pip -q install -e .

before_script:
  - python -c'import platform; print(platform.platform()); import multiprocessing; print("#CPUs=%d" % multiprocessing.cpu_count())'

