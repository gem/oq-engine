#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright (c) 2010-2011, GEM Foundation.
#
# OpenQuake is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License version 3
# only, as published by the Free Software Foundation.
#
# OpenQuake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License version 3 for more details
# (a copy is included in the LICENSE file that accompanied this code).
#
# You should have received a copy of the GNU Lesser General Public License
# version 3 along with OpenQuake.  If not, see
# <http://www.gnu.org/licenses/lgpl-3.0.txt> for a copy of the LGPLv3 License.

"""
    CLI frontend to load the EQ Catalog into a postgres database
"""

import os
import sys


# this is a hack so that it is easier to test these scripts,
# it will add the proper directories to the path so that
# this script can be run from a checkout
if os.path.exists(os.path.join(os.path.dirname(os.path.dirname(__file__)),
                  'openquake')):
    sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))

from openquake.utils import db
from openquake.utils.db import loader as db_loader

from openquake import flags
from openquake import __version__
from openquake.utils import version as utils_version

FLAGS = flags.FLAGS

# database related params

flags.DEFINE_string('dbuser', 'postgres',
    'User of the database')

flags.DEFINE_string('dbpassword', '', 'User password')
flags.DEFINE_string('host', 'localhost', "Postgres' host")
flags.DEFINE_string('port', '5432', "Postgres' port")
flags.DEFINE_string('dbname', 'openquake', 'OpenQuake db')
flags.DEFINE_string('dbschema', 'eqcat', 'Openquake schema')

flags.DEFINE_boolean('version', False, 'Show version information')


def eq_help():
    """
        "Help me if you can I'm feeling down
         and I do appreciate you being round
         help me get my feet back on the ground
         won't you please please help me"

        It prints the bare bone help with Openquake Version
    """

    print utils_version.info(__version__)
    print """EQ Catalog CSV Importer

HELP USAGE
    %(loader)s --helpshort # to get essential help
    %(loader)s --help # to get verbose help

EXAMPLE:
    %(loader)s --dbuser=youruser \
--dbpassword=yourpassword""" % {'loader': sys.argv[0]}


if __name__ == '__main__':
    FLAGS(sys.argv)

    if FLAGS.dbuser and FLAGS.dbpassword and FLAGS.dbname:

        engine = db.create_engine(FLAGS.dbname, FLAGS.dbuser,
                                  password=FLAGS.dbpassword)

        # TODO: make CSV_PATH a parameter
        CSV_PATH = "tests/data/ISC_sampledata1.csv"
        csv_loader = db_loader.CsvModelLoader(CSV_PATH, engine, FLAGS.dbschema)
        csv_loader.serialize()
        print "Import of %s done." % CSV_PATH

    elif FLAGS.version:
        print utils_version.info(__version__)
        sys.exit(0)
    else:
        eq_help()
        sys.exit(0)
