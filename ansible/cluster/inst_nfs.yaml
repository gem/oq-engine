---
# run with ansible-playbook -v -i host.linux  oqengine/oq_work.yaml --limit 
#
- hosts: all
  order: sorted
  gather_facts: yes
  #
  become: yes
  vars:
    top_nfs: /opt
    inst_nfs: /opt/openquake
    shared_nfs: /opt/shared
    nfs_mount_opts: "ro,proto=tcp,soft,intr,noauto"
    nfs_serv_opts: "(ro,fsid=0,crossmnt,insecure,no_subtree_check,async)"
    server_host: "{{hostvars['server']['ansible_host']}}"
    oq_version: master


  tasks:
  ##### Check OS for update system
  - name: ping hosts
    ping:

  - name: check OS and get variable
    debug: msg={{ansible_distribution}}-{{ansible_distribution_version}}-{{ansible_host}}-{{inventory_hostname}}-{{group_names}}

  - name: check OS and get eth1 information
    debug: msg={{ top_nfs }}_{{ ansible_eth1.ipv4.address }}/{{ ansible_eth1.ipv4.netmask }}{{ nfs_serv_opts }}
  
# Create Shared for NFS
#
  - when: "'master' in group_names"
    block:
    
      - name: Check "{{ shared_nfs }}"  folder exists
        stat:
         path: "{{ shared_nfs }}"
        register: workdir
 
      - name: "echo if directory already existed"
        debug:
          msg: "Shared  {{ shared_nfs }}  folder  is already existed"
        when: workdir.stat.exists
 
      - name: "Ansible Create directory {{ shared_nfs }} if not exists"
        file:
          path: "{{ shared_nfs }}"
          state: directory
          mode: '0755'
          group: openquake
          owner: openquake
        when: workdir.stat.exists == false 

      - name: "echo if directory already existed"
        debug:
          msg: "Shared  {{ inst_nfs }}  folder  is already existed"
        when: workdir.stat.exists
 
      - name: "Ansible Create directory {{ inst_nfs }} if not exists"
        file:
          path: "{{ inst_nfs }}"
          state: directory
          mode: '0755'
          group: openquake
          owner: openquake

#### Setup NFS server on master and worker
#
  - when: "'master' in group_names and ansible_distribution == 'Debian' "
    block:

      - name: Ensure NFS utilities are installed on Debian master
        apt:
          name: "{{ item }}"
          state: latest
        loop:  [nfs-kernel-server, netbase, net-tools, vim]
  
      - name: Enable NFS server service on Debian master
        systemd:
          name: "{{ item }}"
          enabled: yes
          state: started
          masked: no
        with_items:
           - nfs-kernel-server

      - name: Disable rpcbind service on Debian master
        systemd:
          name: "{{ item }}"
          enabled: no
          masked: yes
        loop:  [rpcbind.service, rpcbind.socket]

      - name: Set nfs-kernel-server files on master node
        template:
          src: templates/nfs-kernel-server.j2
          dest: /etc/default/nfs-kernel-server 
          owner: root
          group: root
          mode: 0644
          validate: ls -l %s
        notify: reload nfs   
        register: set_nfs_server

      - name: "Add export line for NFS server for shared folder"
        lineinfile:
          path: /etc/exports
          line: "{{ top_nfs }}   {{ ansible_eth1.ipv4.network }}/{{ ansible_eth1.ipv4.netmask }}{{ nfs_serv_opts }}"

  - name: Ensure NFS utilities are installed on Debian worker
    apt:
      name: "{{ item }}"
      state: latest
    loop:  [nfs-common, netbase, net-tools, vim]
    when: "'worker' in group_names and ansible_distribution == 'Debian' "

  - name: Disable rpcbind service on Debian worker
    systemd:
      name: "{{ item }}"
      enabled: no
      masked: yes
    loop:  [rpcbind.service, rpcbind.socket]
    when: "'worker' in group_names and ansible_distribution == 'Debian' "
    
### Rocky
  - when: "'master' in group_names and ansible_distribution == 'Rocky' "
    block:
    
      - name: Disable firewalld service on Rocky NFS Server
        systemd:
          name: "{{ item }}"
          enabled: no
          masked: yes
          state: stopped
        loop:  [firewalld.service]

      - name: Ensure NFS utilities are installed on Rocky
        dnf:
          name: nfs-utils
          update_cache: yes
          state: latest  

      - name: Enable NFS server service on Rocky master
        systemd:
          name: "{{ item }}"
          enabled: yes
          state: started
          masked: no
        with_items:
           - nfs-server
           - rpcbind

      - name: Set nfs-kernel-server files on master node
        template:
          src: templates/nfs-kernel-server.j2
          dest: /etc/default/nfs-kernel-server 
          owner: root
          group: root
          mode: 0644
          validate: ls -l %s
        notify: reload nfs   
        register: set_nfs_server

      - name: "Add export line for NFS server for shared folder"
        lineinfile:
          path: /etc/exports
          line: "{{ top_nfs }}  {{ ansible_eth1.ipv4.network }}/{{ ansible_eth1.ipv4.netmask }}{{ nfs_serv_opts }}"



  - name: Set Mountpoints "{{ shared_nfs }}" for Openquake on Worker Cluster
    command: mount.nfs4 "{{ server_host }}:" "{{ top_nfs }}"
    register: mount_share_nfsv4
    #mount:
    #  path: "{{ top_nfs }}"
    #  src: "{{ server_host }}:/"
    #  fstype: nfs4
    #  opts: "{{ nfs_mount_opts }}"
    #  state: mounted
    when: "'worker' in group_names"

  - name: Run install script from github repo only on master node
    shell: |
      cd "{{ inst_nfs }}"
      git clone  https://github.com/gem/oq-engine.git
      cd oq-engine
      git checkout {{ oq_version }}
      git log -1
      python3.11 ./install.py devel_server
    register: oq_install
    when: "'master' in group_names"

  handlers:
    - name: reload nfs
      command: 'exportfs -ra'
