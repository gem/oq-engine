#!/bin/sh
# postinst script for openquake
#
# see: dh_installdeb(1)

if [ $GEM_SET_DEBUG ]; then
    set -x
fi
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# load debconf suite
. /usr/share/debconf/confmodule

GEM_DEB_PACKAGE="python-oq-engine"
PG_CONF="/etc/postgresql/9.1/main/postgresql.conf"

if [ -f /usr/sbin/rabbitmqctl ]; then
    # create rabbitmq configuration for python-celery
    celeryuser_count=`rabbitmqctl list_users | grep celeryuser | wc -l`
    if [ $celeryuser_count -eq 0 ]; then
        rabbitmqctl add_user celeryuser celery
    fi;
    celeryvhost_count=`rabbitmqctl list_vhosts | grep celeryvhost | wc -l`
    if [ $celeryvhost_count -eq 0 ]; then
        rabbitmqctl add_vhost celeryvhost
        rabbitmqctl set_permissions -p celeryvhost celeryuser ".*" ".*" ".*"
    fi;
fi

HDIR=/usr/openquake/engine
IDIR=/usr/share/pyshared/openquake/engine
mkdir -p $HDIR
chmod 1777 $HDIR

rm -f $HDIR/celeryconfig.py.new_in_this_release
if [ -f $HDIR/celeryconfig.py ]; then
    diff $IDIR/celeryconfig.py $HDIR/celeryconfig.py >/dev/null || cp $IDIR/celeryconfig.py $HDIR/celeryconfig.py.new_in_this_release
else
    cp $IDIR/celeryconfig.py $HDIR
    chmod 666 $HDIR/celeryconfig.py
fi

if [ `cat /etc/group | grep ^openquake: | wc -l` -eq 0 ]; then
    addgroup --system openquake
fi

SDIR=/etc/openquake
for cfg in openquake.cfg
do
    rm -f $SDIR/$cfg.new_in_this_release
    if [ -f $SDIR/$cfg ]; then
        if ! diff $IDIR/$cfg $SDIR/$cfg >/dev/null; then
            cp $IDIR/$cfg $SDIR/$cfg.new_in_this_release
        fi
    else
        mkdir -p $SDIR
        cp $IDIR/$cfg $SDIR
        chmod 644 $SDIR/$cfg
    fi
done
chown -R root.openquake $SDIR

if [ -f /usr/lib/postgresql/9.1/bin/postgres ]; then
    # postgres is installed, flatten and recreate the database.

    # Restart postgres in order to get rid of idle/open connections
    # held by celeryd processes.

    # stop celeryd.
    if [ -x /etc/init.d/celeryd ]; then
        /etc/init.d/celeryd stop
    else
        for pid in `ps ax | grep celeryd | grep -v grep | awk '{print $1}'`; do
            kill -15 $pid
        done
    fi
    # Make sure the celeryd  processes are gone.
    sleep 3
    for pid in `ps ax | grep celeryd | grep -v grep | awk '{print $1}'`; do
        kill -9 $pid
    done

    /etc/init.d/postgresql restart 9.1

    pgport=`cat /etc/postgresql/9.1/main/postgresql.conf | perl -wane ' if ($_ =~ /^\s*port\s*=/) { s/^\s*port\s*=\s*(\d+).*$/$1/; print $_; }'`
    LOGFILE=/var/tmp/openquake-db-installation
    rm -f $LOGFILE
    su -c "/usr/bin/oq_create_db --yes --db-name=openquake2 --db-port=$pgport > $LOGFILE 2>&1" postgres
    for dbu in oq_admin oq_job_init
    do
        su -c "psql -p $pgport -c \"ALTER ROLE $dbu WITH PASSWORD 'openquake'\" >> $LOGFILE 2>&1" postgres
    done
    chmod 644 $LOGFILE

    num_of_errors=`grep -i error $LOGFILE | grep -v "is not empty" | grep -v error_msg_ | grep -v ON_ERROR_STOP | wc -l`
    if [ $num_of_errors -gt 0 ]; then
        echo "Failed to initialise the openquake database"
        echo "Please file a bug here:"
        echo "    https://bugs.launchpad.net/openquake/+filebug"
        echo "and attach this file to it:"
        echo "    $LOGFILE"
        db_stop
        exit 1
    fi

    PG_ROOT=/etc/postgresql/9.1/main
    # Do we already have oq_* database users configured and how many?
    oq_config_lines=`grep oq_ $PG_ROOT/pg_hba.conf | grep -v '^#' | wc -l`
    # Do we already have oq_* database users *auto-configured* and how many?
    auto_oq_config_lines=`grep oq_ $PG_ROOT/pg_hba.conf | grep -v '^#' | grep '^local' | wc -l`
    if [ $oq_config_lines -eq $auto_oq_config_lines ]; then
        # The oq_* db users (if any) have been auto-configured i.e. it's OK
        # if we flatten them.
        rm -f $PG_ROOT/pg_hba.conf.orig
        mv $PG_ROOT/pg_hba.conf $PG_ROOT/pg_hba.conf.orig
        for dbu in oq_admin oq_job_init
        do
            echo "local   openquake2   $dbu                   md5" >> $PG_ROOT/pg_hba.conf
        done
        cat $PG_ROOT/pg_hba.conf.orig | grep -v 'local..*oq_' >> $PG_ROOT/pg_hba.conf
        /etc/init.d/postgresql reload 9.1
    else
        echo ""
        echo "============================================================"
        echo "Your system seems to have a custom pg_hba.conf (postgres"
        echo "authentication configuration)"
        echo ""
        echo "Please ask the system administrator to grant access to the"
        echo "'openquake' database to the following users:"
        echo ""
        echo "      oq_admin oq_job_init"
        echo "============================================================"
        echo ""
    fi

    # Restart the remaining services just to be on the safe side.
    /etc/init.d/rabbitmq-server restart

    # Restart celeryd
    if [ -x /etc/init.d/celeryd ]; then
        /etc/init.d/celeryd start
    else
        # NOTE: when started without an init.d script celeryd must be run as normal user, not root.
        rm -f /tmp/celeryd.log
        echo "celeryd has been stopped, remember to start it before running new calculations"
    fi
fi

# Last but not least delete obsolete .pyc files in /usr/openquake/engine
find /usr/openquake/engine -type f -name \*.pyc -exec rm -f {} \;

#touch /tmp/mop-pause
#while [ 1 ]; do
#    if [ -f /tmp/mop-pause ]; then
#        sleep 1
#    fi
#done

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop
exit 0
