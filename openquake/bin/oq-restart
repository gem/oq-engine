#!/bin/bash

if [ "$(id -u)" != "0" ]; then
    echo ""
    echo "!! This script should be run as root." 1>&2
    echo "!! Please log on as root or use sudo."
    exit 1
fi

echo -n "Checking if openquake is still running... "

if (ps ax | grep "openquake" | egrep --invert-match --silent "grep|postgres") ; then
	echo "it is."
	echo "Please stop all openquake jobs before running $0"
	exit 2
fi

echo "ok, it's not."

echo -n "Terminating celeryd... "
ps ax | grep celeryd | grep -v grep | awk '{print $1}' | xargs kill -15
sleep 2
ps ax | grep celeryd | grep -v grep | awk '{print $1}' | xargs kill -15
echo "done."

if [ -f /tmp/celeryd.log ] ; then
	mv --force /tmp/celeryd.log /tmp/celeryd.log.old
	echo "Celeryd log file has been moved to /tmp/celeryd.log.old"
fi

echo -n "Updating terminated jobs' status... "

PGPASSWORD=openquake psql -U oq_job_init -h localhost openquake <<EOF
	UPDATE uiapi.oq_job
	SET status = 'failed'
	WHERE status NOT IN ('succeeded', 'failed');
EOF

export MPLCONFIGDIR=/tmp
export JAVA_HOME=/usr/lib/jvm/java-6-openjdk/jre
export DJANGO_SETTINGS_MODULE="openquake.settings"

cd /usr/openquake

if [ -z "$1" ]; then
    concurrency=`cat /proc/cpuinfo | grep processor | wc -l`
else
    concurrency=$1
fi

/etc/init.d/rabbitmq-server restart
/etc/init.d/redis-server restart

echo -n "Starting $concurrency celery workers for OpenQuake... "

celeryd -c $concurrency --purge > /tmp/celeryd.log 2>&1 3>&1 &

echo "done."
