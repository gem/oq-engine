---
name: demos + docs
on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref
        default: master
        required: true
  push:
    branches: [ master, docs ]
jobs:
  demos:
    runs-on: ubuntu-latest
    env:
      GITHUB_PULL_REQUEST: ${{ github.event.number }}
      GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
      GITHUB_REF:  ${{ github.ref }}
      GITHUB_HD_REF:  ${{ github.head_ref }}
      GITHUB_BS_REF:  ${{ github.base_ref }}

    steps:
      - name: Check out the codebase (Master)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref == ''
      - name: Check out the codebase (Custom Ref)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Upgrade pip and install requirements
        run: |
          pip install -U pip
          pip install -r ./requirements-py38-linux64.txt
          pip install fiona
      - name: Install oq engine
        run: |
          pip install -e .
          python3 -c "import openquake.baselib as m; print(m.__version__.rpartition('.')[0])"
      - name: Run demos and upload to ci.openquake.org if not workflow_dispatch
        shell: bash
        if: github.event.inputs.git-ref == ''
        env:
          DOCS_SSH: ${{ secrets.DOCS_ARTIFACTS }}
          GITHUB_PULL_REQUEST: ${{ github.event.number }}
          GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
          GITHUB_REF:  ${{ github.ref }}
          GITHUB_HD_REF:  ${{ github.head_ref }}
          GITHUB_BS_REF:  ${{ github.base_ref }}
        run: |
          zip -q -r /tmp/demos.zip demos/
          OQ_DISTRIBUTE=zmq bin/run-demos.sh demos/
          oq dump /tmp/oqdata.zip
          oq restore /tmp/oqdata.zip /tmp/oqdata
          helpers/zipdemos.sh $(pwd)/demos
          echo " Check if this is a pull request or not"
          if [ -z "$GITHUB_HD_REF" ]
             then
              echo " Is not a pull request, use branch: $GITHUB_DEF_BR"
              GITHUB_BR=`echo ${{ github.event.repository.default_branch }}`
             else
              echo " Is a pull request, use branch: $GITHUB_HD_BR"
              GITHUB_BR=`echo ${{ github.head_ref }}`
          fi
          echo "BRANCH set to $GITHUB_BR"
          gpg --quiet --batch --yes --decrypt --passphrase="$DOCS_SSH" --output ./.deploy_rsa ./.deploy_docs.enc
          chmod 600 ./.deploy_rsa
          eval $(ssh-agent -s) && ssh-add ./.deploy_rsa
          echo "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /tmp/demos.zip docs@ci.openquake.org:/var/www/artifacts.openquake.org/travis/demos-${GITHUB_BR}.zip"
          scp -v -o ConnectTimeout=120 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /tmp/demos.zip docs@ci.openquake.org:/var/www/artifacts.openquake.org/travis/demos-${GITHUB_BR}.zip
          echo "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /tmp/oqdata.zip docs@ci.openquake.org:/var/www/artifacts.openquake.org/travis/oqdata-${GITHUB_BR}.zip"
          scp  -v -o ConnectTimeout=120 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /tmp/oqdata.zip docs@ci.openquake.org:/var/www/artifacts.openquake.org/travis/oqdata-${GITHUB_BR}.zip
      - name: Make docs and rsync to ci.openquake.org
        shell: bash
        env:
          DOCS_SSH: ${{ secrets.DOCS_ARTIFACTS }}
          GITHUB_PULL_REQUEST: ${{ github.event.number }}
          GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
          GITHUB_REF:  ${{ github.ref }}
          GITHUB_HD_REF:  ${{ github.head_ref }}
          GITHUB_BS_REF:  ${{ github.base_ref }}
          UPLOAD: ${{ github.event.inputs.git-ref }}
        run: |
          if [ -z "$GITHUB_HD_REF" ]
             then
              echo " Is not a pull request, use branch: $GITHUB_DEF_BR"
              GITHUB_BR=`echo ${{ github.event.repository.default_branch }}`
             else
              echo " Is a pull request, use branch: $GITHUB_HD_BR"
              GITHUB_BR=`echo ${{ github.head_ref }}`
          fi
          echo "BRANCH set to $GITHUB_BR"
          if [ -z "$UPLOAD" ]
             then
              UPLOAD=${GITHUB_BR}
              echo " Is not a workflow_dispatch run, use upload folder: $UPLOAD"
             else
              echo " Is a workflow_dispatch run, use branch: $UPLOAD"
          fi
          gpg --quiet --batch --yes --decrypt --passphrase="$DOCS_SSH" --output ./.deploy_rsa ./.deploy_docs.enc
          chmod 600 ./.deploy_rsa
          eval $(ssh-agent -s) && ssh-add ./.deploy_rsa
          pip install sphinx==1.6.5
          sudo apt update; sudo apt-get install -y texlive-fonts-recommended texlive-latex-extra latexmk gpg
          cd doc/sphinx && make html && cd ../adv-manual && make html && make latexpdf
          echo "rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax --delete build/html/ build/latex/OpenQuakeforAdvancedUsers.pdf docs@ci.openquake.org:/var/www/docs.openquake.org/oq-engine/advanced/;"
          rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax --delete build/html/ build/latex/OpenQuakeforAdvancedUsers.pdf docs@ci.openquake.org:/var/www/docs.openquake.org/oq-engine/advanced/;
          # publish
          if [ -z "$UPLOAD" ]
          then
            echo "rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax --delete ../sphinx/build/html/ docs@ci.openquake.org:/var/www/docs.openquake.org/oq-engine/${UPLOAD}/"
            rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax --delete ../sphinx/build/html/ docs@ci.openquake.org:/var/www/docs.openquake.org/oq-engine/${UPLOAD}/
          else
            VER=$(python3 -c "import openquake.baselib as m; print(m.__version__.rpartition('.')[0])") 
            HTDOCS=/var/www/docs.openquake.org/oq-engine                                                                                                              
            DEST=${HTDOCS}/${VER}
            echo "rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax  ../sphinx/build/html/ docs@ci.openquake.org:${DEST}"
            rsync -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' -ax ../sphinx/build/html/ docs@ci.openquake.org:${DEST}
          fi

