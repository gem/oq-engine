# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application for 3.6, 3.7 and 3.8

on:
  push:
    branches:
      - actions

jobs:

  build_py36:
    if: "!contains(github.event.head_commit.message, 'skip CI')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: actions
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements-py36-linux64.txt && pip install -e .
    - name: Test with pytest
      run: |
        oq dbserver start
        pytest openquake/commands openquake/commonlib --disable-warnings --color=yes && pytest openquake --doctest-modules -x -k "not gsim" --disable-warnings --color=yes --durations=10 && pytest doc/adv-manual/developing.rst && oq dbserver stop
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build_py37:
    if: "!contains(github.event.head_commit.message, 'skip CI')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: actions
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements-py37-linux64.txt && pip install -e .
    - name: Test with pytest
      run: |
        oq dbserver start
        pytest openquake/commands openquake/commonlib --disable-warnings --color=yes && pytest openquake --doctest-modules -x -k "not gsim" --disable-warnings --color=yes --durations=10 && pytest doc/adv-manual/developing.rst && oq dbserver stop
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build_py38:
    if: "!contains(github.event.head_commit.message, 'skip CI')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: actions
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements-py38-linux64.txt && pip install -e .
    - name: Test with pytest
      run: |
        oq dbserver start
        pytest openquake/commands openquake/commonlib --disable-warnings --color=yes && pytest openquake --doctest-modules -x -k "not gsim" --disable-warnings --color=yes --durations=10 && pytest doc/adv-manual/developing.rst && oq dbserver stop
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
