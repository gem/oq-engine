---
name: RPM build of engine in Fedora Copr
on:
  workflow_dispatch:
    inputs:
      lts-ver:
        description: Engine Release (0 for nightly)
        default: 0
        required: true
      pkg-num:
        description: Engine PKG number (for LTS Release)
        default: 1
        required: true
      git-ref:
        description: Git Ref Branch
        default: master
        required: true
      copr:
        description: COPR Repository development for default
        default: openquake
        required: true
  schedule:
    - cron: "0 19 * * *"


jobs:

  build:
    name: Submit and publish from Fedora 36 container
    runs-on: ubuntu-latest
    env:
      GITHUB_PULL_REQUEST: ${{ github.event.number }}
      GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
      GITHUB_REF:  ${{ github.ref }}
      GITHUB_HD_REF:  ${{ github.head_ref }}
      GITHUB_BS_REF:  ${{ github.base_ref }}
    strategy:
      matrix:
        epel-release: [epel-7-x86_64, rocky+epel-8-x86_64]
    # Run in Fedora container on Ubuntu VM

    container:
      image: fedora:36
      options: --privileged
    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref == ''
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Install tooling for source RPM build
        run: |
          dnf --refresh -y install @development-tools @rpm-development-tools \
          copr-cli mock make gcc openssl-devel bzip2-devel libffi-devel

      - name: Deploy SPEC file from template
        env:
          REPO: oq-engine
          BRANCH: HEAD
          STABLE: ${{ github.event.inputs.lts-ver }}
          PKG: ${{ github.event.inputs.pkg-num }}
        run: |
          pwd
          ls -lrt
          mkdir -p ~/rpmbuild/{RPMS,SOURCES,SPECS,SRPMS}
          id
          ls -lrt ~/rpmbuild/*
          #
          LIB=$(cut -d "-" -f 2 <<< ${{ env.REPO }})
          VER=$(cat openquake/baselib/__init__.py | sed -n "s/^__version__[  ]*=[    ]*['\"]\([^'\"]\+\)['\"].*/\1/gp")
          TIME=$(date +"%s")
          echo "$LIB - ${SHA} - $VER $TIME"
          echo "${SHA} ${{ env.REPO }} - ${{ env.BRANCH }}"
          #
          #
          if [ "$STABLE" == "1" ]; then
              sed "s/##_stable_##/${STABLE}/g;s/##_repo_##/${REPO}/g;s/##_version_##/${VER}/g;s/##_timestamp_##/${TIME}/g" rpm/python3-${REPO}.spec.inc > ~/rpmbuild/SPECS/python3-${REPO}.spec
              cd ..
              cp -pr oq-engine ${REPO}-${VER}
              tar czf ~/rpmbuild/SOURCES/${REPO}-${VER}.tar.gz ${REPO}-${VER}
              #git archive --format=tar --prefix=${REPO}-${VER}/ $BRANCH | gzip -9 > build-rpm/SOURCES/${REPO}-${VER}.tar.gz
              sed -i "s/##_release_##/${PKG}/g" ~/rpmbuild/SPECS/python3-${REPO}.spec
          else
              STABLE=0 # set to 0 to avoid failure for schedule run
              sed "s/##_stable_##/${STABLE}/g;s/##_repo_##/${REPO}/g;s/##_version_##/${VER}/g;s/##_timestamp_##/${TIME}/g" rpm/python3-${REPO}.spec.inc > ~/rpmbuild/SPECS/python3-${REPO}.spec
              #git archive --format=tar --prefix=${REPO}-${VER}-git${SHA}/ $BRANCH | gzip -9 > ~/rpmbuild/SOURCES/${REPO}-${VER}-git${SHA}.tar.gz
              cd ..
              cp -pr oq-engine ${REPO}-${VER}-git${SHA}
              tar czf ~/rpmbuild/SOURCES/${REPO}-${VER}-git${SHA}.tar.gz ${REPO}-${VER}-git${SHA}
              sed -i "s/##_release_##/git${SHA}/g" ~/rpmbuild/SPECS/python3-${REPO}.spec
          fi
          cat ~/rpmbuild/SPECS/python3-${REPO}.spec
          ls ~/rpmbuild/SPECS/*
          ls ~/rpmbuild/SOURCES/*

      - name: Build RPM from SPEC files
        env:
          REPO: oq-engine
          BRANCH: HEAD
          STABLE: ${{ github.event.inputs.lts-ver }}
        run: |
          spectool -g -R ~/rpmbuild/SPECS/python3-${REPO}.spec
          rpmbuild -bs  ~/rpmbuild/SPECS/python3-${REPO}.spec
          rpmbuild -bb  ~/rpmbuild/SPECS/python3-${REPO}.spec
          SRPM=$(ls ~/rpmbuild/SRPMS/*.src.rpm)
          mock -r ${{ matrix.epel-release}} $SRPM

      - name: Publish Package on COPR
        env:
          API_TOKEN_CONTENT: ${{ secrets.COPR_API_TOKEN }}
          COPR_REPO: ${{ github.event.inputs.copr }}
        run: |
          mkdir -p "$HOME/.config"
          echo "$API_TOKEN_CONTENT" > "$HOME/.config/copr"
          if [ "$COPR_REPO" != "" ]; then
           echo "COPR REPO: $COPR_REPO"
           SRPM=$(ls ~/rpmbuild/SRPMS/*.src.rpm)
           copr-cli build ${COPR_REPO} $SRPM
          else
           COPR_REPO=openquake
           echo "COPR REPO: $COPR_REPO"
           SRPM=$(ls ~/rpmbuild/SRPMS/*.src.rpm)
           copr-cli build ${COPR_REPO} $SRPM
          fi
