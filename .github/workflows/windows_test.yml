name: TEST OQ calcs using GH

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref
        default: engine-3.12
        required: true
  push:
    branches: [ singapore ]

jobs:
  install_and_test:
    runs-on: windows-latest
    env:
      GITHUB_PULL_REQUEST: ${{ github.event.number }}
      GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
      GITHUB_REF:  ${{ github.ref }}
      GITHUB_HD_REF:  ${{ github.head_ref }}
      GITHUB_BS_REF:  ${{ github.base_ref }}
      BRANCH: ${{ github.event.inputs.git-ref }}
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
    # This Checkout use git-ref keyword from dispatch
      - name: Clone Repository (Master)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref == ''
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install engine on developer mode
        env: 
          BRANCH: ${{ github.event.inputs.git-ref }}
        run: |
          set PIP_DEFAULT_TIMEOUT=100
          python -m pip install pip wheel setuptools --upgrade
          #echo Branch to test %BRANCH%
          #if %BRANCH%=="" (python install.py devel) else (python install.py devel --version %BRANCH%)
          pwd 
          ls
          echo "branch to test: ${BRANCH}"
          if [[ "$BRANCH" != "" ]]
          then
            python install.py devel --version ${BRANCH}
          else
            python install.py devel
          fi
        shell: bash
      - name: Run Test using http method
        run: |
          C:\Users\runneradmin\openquake\Scripts\activate.ps1
          #
          oq --version
          Start-Job -ScriptBlock{& 'C:\Users\runneradmin\openquake\Scripts\oq.exe' dbserver start}
          #
          write-host "Classical Hazard"
          oq engine --run "https://github.com/gem/oq-engine/blob/master/openquake/server/tests/data/classical.zip?raw=true"
          #
          write-host "Singapore"
          oq engine --run "https://downloads.openquake.org/risk_test.zip"
