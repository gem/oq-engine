#!/usr/bin/env python3
#  -*- coding: utf-8 -*-
#  vim: tabstop=4 shiftwidth=4 softtabstop=4

#  Copyright (c) 2018, GEM Foundation

#  OpenQuake is free software: you can redistribute it and/or modify it
#  under the terms of the GNU Affero General Public License as published
#  by the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  OpenQuake is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.

#  You should have received a copy of the GNU Affero General Public License
#  along with OpenQuake.  If not, see <http://www.gnu.org/licenses/>.
import logging
from openquake.baselib import sap, datastore
from openquake.commonlib import readinput


@sap.Script
def reduce_sm(calc_id):
    """
    Reduce the source model of the given calculation by discarding all
    sources that do not contribute to the hazard.
    """
    logging.basicConfig(level=logging.INFO)
    with datastore.read(calc_id) as dstore:
        oqparam = dstore['oqparam']
        info = dstore['source_info'].value
        events = info['events'] > 0
        if events.any():
            source_id = info[events]['source_id']
        else:
            source_id = info[info['num_ruptures'] > 0]['source_id']
        source_ids = set(s.decode('utf-8') for s in source_id)
    readinput.reduce_source_model(
            oqparam.inputs['source_model_logic_tree'], source_ids)


reduce_sm.arg('calc_id', 'calculation ID')


if __name__ == '__main__':
    reduce_sm.callfunc()
