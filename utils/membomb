#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4
# 
# Copyright (C) 2024, GEM Foundation
# 
# OpenQuake is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# OpenQuake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with OpenQuake.  If not, see <http://www.gnu.org/licenses/>.

import logging
import numpy
from openquake.baselib import parallel, sap

def allocate_mem(n):
    lst = []
    for _ in range(n):
        z = numpy.zeros((1024, 1024, 13))  # 104 MB
        lst.append(z)
        yield z


def main(n: int = 1):
    """
    Allocate a lot of memory; used to simulate OOM situations
    """
    tot = 0
    allargs = [(n,) for _ in range(parallel.Starmap.num_cores)]
    for z in parallel.Starmap(allocate_mem, allargs):
        tot += z.nbytes
    logging.warning('Allocated %.1f GB', tot / 1024**3)


if __name__ == '__main__':
    sap.run(main)
